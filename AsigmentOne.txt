/* Name: Henry Morris
 * Date: 9/7/2018
 * Purpose: The control center of the program that creates instances of the classes needed.
 * checkingNumbers: is the class that checks all the things that need checking like if the number is positive
 * getInput: this class contains a scanner that gets a integer to use as input
 * Functions:
 * displayCharacters: this displays all the data I collected that the project requested 
 */

public class CheckNumbers 
{	
	public static void main(String[] args) 
	{
		getInput inputClass = new getInput(); //creating an instance of the class getInput()
		int input = inputClass.getInput(); //getting the input 
		checkNumberTest postiveCheck = new checkNumberTest(input); //creating an instance of checkingNumbers class
		
		//boolean trueIsPostive = postiveCheck.checkIfPostive(input);
		postiveCheck.postiveIsTruePostive = postiveCheck.checkIfPostive(input);
		
		//boolean trueIsPrime = postiveCheck.checkPrime(input);
		postiveCheck.postiveIsTruePrime = postiveCheck.checkPrime(input);
		
		
		//int numberOfNumbers = postiveCheck.checkLength(input);
		postiveCheck.postiveIsTrueLenth = postiveCheck.checkLength(input); 
		
		//boolean trueIsPalondrome = postiveCheck.checkPalandrome(input);
		postiveCheck.postiveIsTruePalandrome = postiveCheck.checkPalandrome(input);
		
		disPlayCharacters(postiveCheck);
	}
	public static void disPlayCharacters(checkNumberTest nums)
	{
		System.out.println("Your Number: " + nums.input);
		System.out.println("Postive number: " + nums.postiveIsTruePostive);
		System.out.println("Prime Number: " + nums.postiveIsTruePrime);
		System.out.println("Length Of Number: " + nums.postiveIsTrueLenth);
		System.out.println("Palandrome Number: " + nums.postiveIsTruePalandrome); 
	}
}
-----------------------------------------------------------------------------------------------------------
import java.util.Objects;

/* Name: Henry Morris
 * Date: 9/7/2018
 * Purpose: to receive player input and complete certain actions and operation then return a result
 * Functions:
 * checkIfPostive: checks if number is positive or negative(above or below zero) if positive return true
 * 
 * checkPrime: checks if number is prime. Does this by using input number % then a value that goes from zero
 * to input number and if any of them return zero it means its not prime, but if none of them do it return 
 * false meaning its not prime.
 * 
 * checkLength: converts player input to string then uses function string.length() to find length
 * 
 * checkPalndrome: explanation in function 
 * 
 */

public class checkNumberTest
{
	boolean postiveIsTruePostive;
	boolean postiveIsTruePrime;
	int postiveIsTrueLenth; 
	int input;
	boolean postiveIsTruePalandrome;
	
	public checkNumberTest(int playerInput)
	{
		input = playerInput;
	}
	
	public static boolean checkIfPostive(int num)
	{
		boolean postiveIsTrue = false;
		if(num > 0)
		{
			postiveIsTrue = true;
			return postiveIsTrue;
		}else
		{
			postiveIsTrue = false;
			return postiveIsTrue;
		}
	}
	public static boolean checkPrime(int num1)
	{
		boolean trueIsPostive = true;
		for(int x = 2;x < num1; x++)
		{
			//System.out.println("Andy");
			//System.out.print(x + "|");
			//System.out.println(num1);
			//System.out.println((num1 % x));
			if(num1 % x == 0)
			{
				trueIsPostive = false;
				//System.out.println((num1 % x));
				x = num1 + 10;
			}
		}
		return trueIsPostive; 
	}
	public static int checkLength(int num2)
	{
		int numString = String.valueOf(num2).length();
		return numString;
	}
	public static boolean checkPalandrome(int num3)
	{
		boolean returnPalndromeIsTrue = false;
		int numString1 = String.valueOf(num3).length();
		String fullString1 = String.valueOf(num3);
		String firstHalf = "";
		String secondHalf = "";
		if(numString1 % 2 == 0) //checks if length of input is even or odd 
		{
			for(int x = 0;x < (numString1/2);x++)//loop runs half the length of the string 
			{
				firstHalf = firstHalf + fullString1.charAt(x);//starts at begging of input string and adds half its value to empty string
				secondHalf = secondHalf + fullString1.charAt((numString1 -1) - x);//starts at end of input going back adding its value to emtpy string 
			}
			//System.out.println(firstHalf);
			//System.out.print(secondHalf);
		}else
		{
			for(int x = 0; x < ((numString1-1)/2);x++) //runs half the string minus one becuase the share the middle one 
			{
				firstHalf = firstHalf + fullString1.charAt(x); //starts at begging of input string and adds half its value to empty string
				secondHalf = secondHalf + fullString1.charAt((numString1-1)-x); //starts at end of input going back adding its value to emtpy string 
			}
		}
		if(Objects.equals(secondHalf,firstHalf)) //checks if they equal each other if they do return true meaning it is a palndrome 
		{
			returnPalndromeIsTrue = true; 
			return returnPalndromeIsTrue;
		}
		return returnPalndromeIsTrue;
	}
}
------------------------------------------------------------------------------
import java.util.Scanner; 

public class getInput 
{
	public static int getInput()
	{
		int playerInput = 0;
		boolean validInputIsTrue = true;
		while(validInputIsTrue)
		{
			validInputIsTrue = false;
			try
			{
				Scanner inputScanner = new Scanner(System.in);
				System.out.println("Please Input an Integer: ");
				playerInput = inputScanner.nextInt();
			}
			catch (Exception e)
			{
				System.out.println("Error invalid Input please Input a Inreger: ");
				validInputIsTrue = true;
			}
		}
		return playerInput;
	}

}
